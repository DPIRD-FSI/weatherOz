% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_silo_points.R
\name{get_silo}
\alias{get_silo}
\title{Retrieve data from SILO (Scientific Information for Land Owners) API}
\usage{
get_silo(
  station_id = NULL,
  latitude = NULL,
  longitude = NULL,
  first = NULL,
  last = NULL,
  data_format = "alldata",
  email = NULL
)
}
\arguments{
\item{station_id}{\code{Integer}, An integer or vector of integers representing
station number(s) available from the \acronym{SILO} network. Defaults to
\code{NULL} and when used, queries with latitude and longitude inputs are not
permitted.}

\item{latitude}{\code{Numeric}. A single value or a vector, representing the
latitude(s) of the point(s)-of-interest. Defaults to \code{NULL} and when used,
queries with \code{station_id} inputs are not permitted.}

\item{longitude}{\code{Numeric}. A single value or vector, representing the
longitude(s) of the point(s)-of-interest. Defaults to \code{NULL} and when used,
queries with \code{station_id} inputs are not permitted.}

\item{first}{\code{Integer}. A string representing the start date of the query in
the format 'yyyymmdd' (ISO-8601).}

\item{last}{\code{Integer}. A string representing the end date of the query in the
format 'yyyymmdd' (ISO-8601).}

\item{data_format}{\code{Character}. A string specifying the type of data to
retrieve.  Limited to 'alldata', 'monthly' or 'apsim'. Note 'apsim' and
'alldata' retrieve daily data.}

\item{email}{\code{Character}. A string specifying a valid email address to use
for the request. The query will return an error if a valid email address is
not provided.}
}
\value{
A \code{data.table} containing the retrieved data from the \acronym{SILO}
\acronym{API}.
}
\description{
Download weather data from the \acronym{SILO} \acronym{API} from both
station observations (DataDrill) and gridded data (PatchedPointData). There
are three formats available: 'alldata' and 'apsim' with daily frequency and
'monthly' with, that's right, monthly frequency. Queries with \code{station_id}
return stations observations from the 'DataDrill' endpoint while queries with
\code{latitude} and \code{longitude} coordinates return gridded data from the
'PatchedPointData'.
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Source observation data for station Wongan Hills station, WA (8137)
wd <- get_silo(station_id = 8137,
               first = "20210601",
               last = "20210701",
               data_format = "alldata",
               email = "your@email")

# Source data from latitude and longitude coordinates (gridded data)
# Southwood, WLD in the 'apsim' format.
wd <- get_silo(latitude = -27.85,
               longitude = 150.05,
               first = "20221001",
               last = "20221201",
               data_format = "apsim",
               email = "your@email")

# using multiple station IDs or locations

# start multisession
future::plan("multisession")
# Query multiple stations (BoM, by code)
my_stations <- c(65030, 89033, 39083, 8061)
wd <- get_silo(station_id = my_stations,
               first = "20220401",
               last = "20221001",
               data_format = "monthly",
               email = "YOUR_EMAIL_ADDRESS")

# Query multiple stations (using latitude and longitude coordinates)
mylat <- c(-33.512, -30.665, -27.309, -24.237)
mylon <- c(115.821, 117.487, 119.649, 121.584)
wd <- get_silo(latitude = mylat,
               longitude = mylon,
               first = "202101201",
               last = "20220228",
               data_format = "alldata",
               email = "YOUR_EMAIL_ADDRESS")
\dontshow{\}) # examplesIf}
}
\concept{SILO}
